# Project responsiblity list

## Luca Jungnickel, Role Quality Manager

### Functions and concepts designed and implemented
- robot design
- main NXT programming
    - implemented interfaces for the bluetooth module
    - implementing debugging functions
- designed and implemented an internal state chart for modelling the robot behaviour
- designed and implemented safety requirements via the touch sensors
- specified message types and content which are transmitted between PI and NXT

### Mangement role: Quality Manager
- focused on the embedded quality side
- specified a coding standard for embedded systems at the beginning: https://barrgroup.com/sites/default/files/barr_c_coding_standard_2018.pdf 
- summarized the most important aspects of this coding standard (for our group) and shared that at the beginning:
    - https://docs.google.com/document/d/1mccZKsAIQLhvV3BfLaygU7TVCo0EuYZVr2NfokZLC_s/edit?usp=sharing 
- coding reviews of embedded nxt code with Richard
- designed and implemented safety requirements for the robot: (see in lower half of the state chart)
    - recalibrate the robot if a touch sensor is hit, but this event is unexpected
    - recalibration consists of these steps:
        - driving back to one side
        - counting the number of stones again
        - if the number is correct and the bumber stone is hit: continue normal operation
    - if recalibration failed: stop the robot
    
## Richardt Joergensen, Role Quality Manager

### Functions and concepts designed and implemented
- main robot design
    - created first and second robot design for assembly line
    - created dispenser module in different versions
    - created boxsystem, which is upgradeable
    - 
- NXT programming
    - helped implementing interfaces for the bluetooth module
- helped designing and implementing an internal state chart for modelling the robot behaviour
- helped designing and implementing safety requirements via the touch sensors

### Mangement role: Quality Manager
- coding reviews of embedded nxt code with Luca
- helped designing and implementing safety requirements for the robot: (see in lower half of the state chart)
    - recalibrate the robot if a touch sensor is hit, but this event is unexpected
    - recalibration consists of these steps:
        - driving back to one side
        - counting the number of stones again
        - if the number is correct and the bumber stone is hit: continue normal operation
    - if recalibration failed: stop the robot
    
## Filip Rejmus, Role Integration Manager

### Functions and concepts designed and implemented
- Bluetooth API specification and implementation
    - Specification included safety measures such as checksum and acknowledgements
    - Specified the various bluetooth states that are needed to stay in sync with NXT counterpart
    - Specified and implemented the message definitions
- designed a Bluetooth protocol specification chart
- Deployed CMake across the Backend enabling us to build all libraries and executables from one place


### Mangement role: Integration Manager
- Specified interfaces of bluetooth API
- Specified Bluetooth protocols
- Supported setup of CMake across the whole backend
- Integrated NXT and Raspberry Pi at the last stage by resolving remaining bugs caused by the integration

## Timo Oeltze, Time Manager 

### Functions and concepts designed and implemented
- Color and size detection using OpenCV
	- Implementation of the color detection of Lego bricks 
	- Optimization of the code for color detection
	- Converting form python to c++
	- implementation of size detection
	- Wrote tests for the color detection and size detectionn using CTests
- Implementation of the controller for the assembly line
	- Main routine with functions from the bluetooth team
	- Specified and implemented three modes for sorting Lego bricks with the assembly line
- Integration testing during the recording of the final video

### Mangement role: Time Manager
- Created a gantt chart for the possible chronological sequence (by weeks) of the project
- Milestone goals converted into tasks / issues
- Monitoring the current status during the entire project time
    - Time adjustment of the gantt chart after each milestone
- changing the technical implementation due to time restraints

## Tristan Brech, Time Manager 

### Functions and concepts designed and implemented
- Color and size detection using OpenCV
	- Implementation of the color detection of Lego bricks 
	- Optimization of the code for color detection
	- Converting form python to c++
	- implementation of size detection
	- Wrote tests for the color detection and size detectionn using CTests
- Implementation of the controller for the assembly line
	- Main routine with functions from the bluetooth team
	- Specified and implemented three modes for sorting Lego bricks with the assembly line
- Integration testing during the recording of the final video

### Mangement role: Time Manager
- Created a gantt chart for the possible chronological sequence (by weeks) of the project
- Milestone goals converted into tasks / issues
- Monitoring the current status during the entire project time
    - Time adjustment of the gantt chart after each milestone
- changing the technical implementation due to time restraints

## Sang Woo Bae, Technical Manager

### Functions and concepts designed and implemented
- Bluetooth API specification and implementation (together with Filip, read above)
- implementation of bluetooth for NXT

### Management role: Technical Manager
- Setup of Git repository 
- Setup of Git PR tactics and Code reviews
- Setup of Git keys for all machines
- Code Reviews for all parts connected to bluetooth